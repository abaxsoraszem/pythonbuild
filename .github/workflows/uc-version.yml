name: Extract Version

on:
  push:
    branches:
      - main

jobs:
  extract_version:
    runs-on: ubuntu-latest
    steps:

      - name: Load Previous Version Artifact
        id: load_previous_version
        uses: actions/download-artifact@v2
        with:
          name: version-artifact
          path: previous_version

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install requests library
        run: python -m pip install requests

      - name: Run Python Script
        run: |
          python - <<EOF
          import requests
          import re
          import os

          # Download webpage content
          response = requests.get('https://releases.usercentrics.com/loadMoreNews?app_id=nGxJmmsl20682&role=cmpv1%3Bcmpv2%3B&language=EN&user_id=70bb2f11-095e-415d-9712-2cf59a885f98&lastname=Cat&firstname=Blue&category=browser%20ui&publicPage=true&post=false&basePath=%2F%2Freleases.usercentrics.com%2Fen&standaloneLogoUrl=https%3A%2F%2Fstatic.getbeamer.com%2FnGxJmmsl20682%2Flogo_3269.png')
          html_content = response.text

          # Parse version from HTML body using regex
          version_pattern = r'Version (\d+\.\d+\.\d+)'
          version_match = re.search(version_pattern, html_content)
          if version_match:
              version = version_match.group(1)
              version = version.replace("Version ", "")  # Remove the "Version " prefix
              print("Version:", version)

              previous_version = ""
              if os.path.exists("previous_version/version.txt"):
                  with open("previous_version/version.txt", "r") as f:
                      previous_version = f.read().strip()

              if version != previous_version:
                  with open("version.txt", "w") as f:
                      f.write(version)
              else:
                  print("Version is the same as previous.")

          else:
              print("Version not found.")
          EOF

      - name: Upload Version Artifact
        uses: actions/upload-artifact@v2
        with:
          name: version-artifact
          path: version.txt

  download:
    needs: extract_version
    if: steps.extract_version.outputs.run_script == 'success'
    runs-on: ubuntu-latest
    steps:

      - name: Download Version Artifact
        uses: actions/download-artifact@v2
        with:
          name: version-artifact
          path: artifact

      - name: Download Zip
        run: |
          cat artifact/version.txt
          version=$(cat artifact/version.txt)
          echo "Using version: $version"
